#ドラゴンクエストの例で大きなプログラムの作成方法を学ぶ
# -複数のクラスの連携
# -どのようにしてコードを広げていくか
# -題材はドラクエ1


#ドラクエ2次元のマップを作成する。

#mapのみ実装する

#必要なイメージ

# 主人公
#    前後左右に動く
#    ただし、マップの外には出ない
#    町人に話かける
#
# 町人
#    主人公に応答する


# a:left , s:Right,w:up,d:talk

# +=================+
# |                 |
# |                 |
# |                 |   マップ
# |                 |
# |                 |    向いている向きでアイコンが変わる
# |               M |
# |                 |
# |                 |
# |      P          |
# |                 |
# +=================+


############################
# hello bob     メッセージ欄
############################


#クラス:町人
 # x座標
 # y座標
 # 外見の種類
 # セリフ

#メソッド
 # respond:主人公に応答する

#外見

# B:武器屋
# M:商人
# P:神父


#クラス町人のインスタンス

# インスタンス　町人A
#  メンバ変数
#   x:8
#   y:4
#   外見:男A
#   セリフ:"こんにちは"
#
# メソッド:
#  respond:主人公に応答する
#
# インスタンス　町人B
# メンバ変数
# x: 4
# y: 2
# 外見: 魔法使い
# セリフ: "いい天気じゃのう"
#
# メソッド:
# respond: 主人公に応答する

#主人公

# クラス:主人公
#
#  メンバ変数
#   x座標
#   y座標
#   向いている方向
#   セリフ
#
# メソッド:
#  run:キー入力を持つ(標準入力の無限ループ)
#  move:キー入力で上下左右に動く
#  talk:向いている方向の町人と話す

# 主人公のアイコン
#
# <:左向き
# >:右向き
# ^:上向き
# V:下向き


#マップ

# クラス:map
#  メンバー変数
#    -主人公のインスタンス
#    -町人たちのインスタンス
#    -マップ情報
#
#  メソッド:
#   -render:マップを書き出す
#   -主人公と町人を管理するメソッド郡(キー入力管理など)



#それぞれのクラスとクラスの相互関係
# ・十字キーを操作すると勇者が動く
# ・地図はその情報を反映しなければならない
#
# 入力(keyinput)→自分のx,y情報をアップデート→描画を依頼→画面出力→画面が出る


class DQMap:
    max_x = 0
    max_y = 0

    def __init__(self,max_xy):
        (self.max_x,self.max_y) = max_xy


    def render_map(self):
        map_string_list= []
        for y in range(self.max_y):
            for x in range(self.max_x):
                if(y == 0 or y==self.max_y -1):
                    if(x == 0 or x==self.max_x -1):
                        map_string_list.append("+")
                    else:
                        map_string_list.append("-")
                else:
                    if(x == 0 or x == self.max_x -1):
                        map_string_list.append("|")
                    else:
                        map_string_list.append("\n")
            map_string = "".join(map_string_list)
            print(map_string.rstrip())








